<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zlx.bangbang.dao.CountInfoMapper" >
  <resultMap id="BaseResultMap" type="com.zlx.bangbang.domain.CountInfo" >
    <constructor >
      <idArg column="count_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="school_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="count_date" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="new_indent" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="finished_indent" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="income" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="login_user" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    count_id, school_id, count_date, new_indent, finished_indent, income, login_user
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from count_info
    where count_id = #{countId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from count_info
    where count_id = #{countId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zlx.bangbang.domain.CountInfo" >
    insert into count_info (count_id, school_id, count_date, 
      new_indent, finished_indent, income, 
      login_user)
    values (#{countId,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER}, #{countDate,jdbcType=INTEGER}, 
      #{newIndent,jdbcType=INTEGER}, #{finishedIndent,jdbcType=INTEGER}, #{income,jdbcType=DECIMAL}, 
      #{loginUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zlx.bangbang.domain.CountInfo" >
    insert into count_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="countId != null" >
        count_id,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="countDate != null" >
        count_date,
      </if>
      <if test="newIndent != null" >
        new_indent,
      </if>
      <if test="finishedIndent != null" >
        finished_indent,
      </if>
      <if test="income != null" >
        income,
      </if>
      <if test="loginUser != null" >
        login_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="countId != null" >
        #{countId,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="countDate != null" >
        #{countDate,jdbcType=INTEGER},
      </if>
      <if test="newIndent != null" >
        #{newIndent,jdbcType=INTEGER},
      </if>
      <if test="finishedIndent != null" >
        #{finishedIndent,jdbcType=INTEGER},
      </if>
      <if test="income != null" >
        #{income,jdbcType=DECIMAL},
      </if>
      <if test="loginUser != null" >
        #{loginUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zlx.bangbang.domain.CountInfo" >
    update count_info
    <set >
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="countDate != null" >
        count_date = #{countDate,jdbcType=INTEGER},
      </if>
      <if test="newIndent != null" >
        new_indent = #{newIndent,jdbcType=INTEGER},
      </if>
      <if test="finishedIndent != null" >
        finished_indent = #{finishedIndent,jdbcType=INTEGER},
      </if>
      <if test="income != null" >
        income = #{income,jdbcType=DECIMAL},
      </if>
      <if test="loginUser != null" >
        login_user = #{loginUser,jdbcType=INTEGER},
      </if>
    </set>
    where count_id = #{countId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zlx.bangbang.domain.CountInfo" >
    update count_info
    set school_id = #{schoolId,jdbcType=INTEGER},
      count_date = #{countDate,jdbcType=INTEGER},
      new_indent = #{newIndent,jdbcType=INTEGER},
      finished_indent = #{finishedIndent,jdbcType=INTEGER},
      income = #{income,jdbcType=DECIMAL},
      login_user = #{loginUser,jdbcType=INTEGER}
    where count_id = #{countId,jdbcType=INTEGER}
  </update>
</mapper>