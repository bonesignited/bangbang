<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zlx.bangbang.dao.IndentMapper" >
  <resultMap id="BaseResultMap" type="com.zlx.bangbang.domain.Indent" >
    <constructor >
      <idArg column="indent_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="performer_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="publisher_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="coupon_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="coupon_price" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="indent_type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="require_gender" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="indent_content" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="indent_price" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="total_price" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="urgent_type" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="is_solved" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="indent_state" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="secret_text" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="take_good_address" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="shipping_address_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="good_price" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    indent_id, performer_id, publisher_id, coupon_id, coupon_price, indent_type, require_gender, 
    indent_content, indent_price, total_price, urgent_type, is_solved, indent_state, 
    secret_text, take_good_address, shipping_address_id, good_price, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from indent
    where indent_id = #{indentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from indent
    where indent_id = #{indentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zlx.bangbang.domain.Indent" >
    insert into indent (indent_id, performer_id, publisher_id, 
      coupon_id, coupon_price, indent_type, 
      require_gender, indent_content, indent_price, 
      total_price, urgent_type, is_solved, 
      indent_state, secret_text, take_good_address, 
      shipping_address_id, good_price, create_time, 
      update_time)
    values (#{indentId,jdbcType=INTEGER}, #{performerId,jdbcType=VARCHAR}, #{publisherId,jdbcType=VARCHAR}, 
      #{couponId,jdbcType=INTEGER}, #{couponPrice,jdbcType=INTEGER}, #{indentType,jdbcType=VARCHAR}, 
      #{requireGender,jdbcType=VARCHAR}, #{indentContent,jdbcType=VARCHAR}, #{indentPrice,jdbcType=INTEGER}, 
      #{totalPrice,jdbcType=INTEGER}, #{urgentType,jdbcType=TINYINT}, #{isSolved,jdbcType=BIT}, 
      #{indentState,jdbcType=VARCHAR}, #{secretText,jdbcType=VARCHAR}, #{takeGoodAddress,jdbcType=VARCHAR}, 
      #{shippingAddressId,jdbcType=INTEGER}, #{goodPrice,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zlx.bangbang.domain.Indent" >
    insert into indent
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="indentId != null" >
        indent_id,
      </if>
      <if test="performerId != null" >
        performer_id,
      </if>
      <if test="publisherId != null" >
        publisher_id,
      </if>
      <if test="couponId != null" >
        coupon_id,
      </if>
      <if test="couponPrice != null" >
        coupon_price,
      </if>
      <if test="indentType != null" >
        indent_type,
      </if>
      <if test="requireGender != null" >
        require_gender,
      </if>
      <if test="indentContent != null" >
        indent_content,
      </if>
      <if test="indentPrice != null" >
        indent_price,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="urgentType != null" >
        urgent_type,
      </if>
      <if test="isSolved != null" >
        is_solved,
      </if>
      <if test="indentState != null" >
        indent_state,
      </if>
      <if test="secretText != null" >
        secret_text,
      </if>
      <if test="takeGoodAddress != null" >
        take_good_address,
      </if>
      <if test="shippingAddressId != null" >
        shipping_address_id,
      </if>
      <if test="goodPrice != null" >
        good_price,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="indentId != null" >
        #{indentId,jdbcType=INTEGER},
      </if>
      <if test="performerId != null" >
        #{performerId,jdbcType=VARCHAR},
      </if>
      <if test="publisherId != null" >
        #{publisherId,jdbcType=VARCHAR},
      </if>
      <if test="couponId != null" >
        #{couponId,jdbcType=INTEGER},
      </if>
      <if test="couponPrice != null" >
        #{couponPrice,jdbcType=INTEGER},
      </if>
      <if test="indentType != null" >
        #{indentType,jdbcType=VARCHAR},
      </if>
      <if test="requireGender != null" >
        #{requireGender,jdbcType=VARCHAR},
      </if>
      <if test="indentContent != null" >
        #{indentContent,jdbcType=VARCHAR},
      </if>
      <if test="indentPrice != null" >
        #{indentPrice,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=INTEGER},
      </if>
      <if test="urgentType != null" >
        #{urgentType,jdbcType=TINYINT},
      </if>
      <if test="isSolved != null" >
        #{isSolved,jdbcType=BIT},
      </if>
      <if test="indentState != null" >
        #{indentState,jdbcType=VARCHAR},
      </if>
      <if test="secretText != null" >
        #{secretText,jdbcType=VARCHAR},
      </if>
      <if test="takeGoodAddress != null" >
        #{takeGoodAddress,jdbcType=VARCHAR},
      </if>
      <if test="shippingAddressId != null" >
        #{shippingAddressId,jdbcType=INTEGER},
      </if>
      <if test="goodPrice != null" >
        #{goodPrice,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zlx.bangbang.domain.Indent" >
    update indent
    <set >
      <if test="performerId != null" >
        performer_id = #{performerId,jdbcType=VARCHAR},
      </if>
      <if test="publisherId != null" >
        publisher_id = #{publisherId,jdbcType=VARCHAR},
      </if>
      <if test="couponId != null" >
        coupon_id = #{couponId,jdbcType=INTEGER},
      </if>
      <if test="couponPrice != null" >
        coupon_price = #{couponPrice,jdbcType=INTEGER},
      </if>
      <if test="indentType != null" >
        indent_type = #{indentType,jdbcType=VARCHAR},
      </if>
      <if test="requireGender != null" >
        require_gender = #{requireGender,jdbcType=VARCHAR},
      </if>
      <if test="indentContent != null" >
        indent_content = #{indentContent,jdbcType=VARCHAR},
      </if>
      <if test="indentPrice != null" >
        indent_price = #{indentPrice,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=INTEGER},
      </if>
      <if test="urgentType != null" >
        urgent_type = #{urgentType,jdbcType=TINYINT},
      </if>
      <if test="isSolved != null" >
        is_solved = #{isSolved,jdbcType=BIT},
      </if>
      <if test="indentState != null" >
        indent_state = #{indentState,jdbcType=VARCHAR},
      </if>
      <if test="secretText != null" >
        secret_text = #{secretText,jdbcType=VARCHAR},
      </if>
      <if test="takeGoodAddress != null" >
        take_good_address = #{takeGoodAddress,jdbcType=VARCHAR},
      </if>
      <if test="shippingAddressId != null" >
        shipping_address_id = #{shippingAddressId,jdbcType=INTEGER},
      </if>
      <if test="goodPrice != null" >
        good_price = #{goodPrice,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where indent_id = #{indentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zlx.bangbang.domain.Indent" >
    update indent
    set performer_id = #{performerId,jdbcType=VARCHAR},
      publisher_id = #{publisherId,jdbcType=VARCHAR},
      coupon_id = #{couponId,jdbcType=INTEGER},
      coupon_price = #{couponPrice,jdbcType=INTEGER},
      indent_type = #{indentType,jdbcType=VARCHAR},
      require_gender = #{requireGender,jdbcType=VARCHAR},
      indent_content = #{indentContent,jdbcType=VARCHAR},
      indent_price = #{indentPrice,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=INTEGER},
      urgent_type = #{urgentType,jdbcType=TINYINT},
      is_solved = #{isSolved,jdbcType=BIT},
      indent_state = #{indentState,jdbcType=VARCHAR},
      secret_text = #{secretText,jdbcType=VARCHAR},
      take_good_address = #{takeGoodAddress,jdbcType=VARCHAR},
      shipping_address_id = #{shippingAddressId,jdbcType=INTEGER},
      good_price = #{goodPrice,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where indent_id = #{indentId,jdbcType=INTEGER}
  </update>
</mapper>