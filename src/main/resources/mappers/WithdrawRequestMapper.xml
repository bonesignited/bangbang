<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zlx.bangbang.dao.WithdrawRequestMapper" >
  <resultMap id="BaseResultMap" type="com.zlx.bangbang.domain.WithdrawRequest" >
    <constructor >
      <idArg column="withdraw_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="is_solved" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    withdraw_id, user_id, is_solved, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from withdraw_request
    where withdraw_id = #{withdrawId,jdbcType=INTEGER}
  </select>

  <select id="findAllByUserId" resultType="com.zlx.bangbang.domain.WithdrawRequest">
    select
    <include refid="Base_Column_List"/>
    from substitute.withdraw_request
    where user_id = #{userId}
  </select>

  <select id="findAllByIsSolved" resultType="com.zlx.bangbang.domain.WithdrawRequest">
    select
    <include refid="Base_Column_List"/>
    from substitute.withdraw_request
    where is_solved = #{isSolved}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from withdraw_request
    where withdraw_id = #{withdrawId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zlx.bangbang.domain.WithdrawRequest" >
    insert into withdraw_request (withdraw_id, user_id, is_solved, 
      create_time)
    values (#{withdrawId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{isSolved,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zlx.bangbang.domain.WithdrawRequest" >
    insert into withdraw_request
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="withdrawId != null" >
        withdraw_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="isSolved != null" >
        is_solved,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="withdrawId != null" >
        #{withdrawId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isSolved != null" >
        #{isSolved,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zlx.bangbang.domain.WithdrawRequest" >
    update withdraw_request
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isSolved != null" >
        is_solved = #{isSolved,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where withdraw_id = #{withdrawId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zlx.bangbang.domain.WithdrawRequest" >
    update withdraw_request
    set user_id = #{userId,jdbcType=VARCHAR},
      is_solved = #{isSolved,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where withdraw_id = #{withdrawId,jdbcType=INTEGER}
  </update>
</mapper>